{"version":3,"sources":["panels/Home.js","function/Function.js","panels/SelectDate.js","components/Input.js","function/Server.js","panels/SelectTime.js","panels/AdminPanel.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","user","header","mode","before","photo_200","src","description","city","title","first_name","last_name","stretched","size","onClick","MONTH_DAY","years","monthNames","weekDayNames","DAYS_IN_MONTH","WEEK_DAYS_FROM_MONDAY","Month","RECORD_TIMES","TABLE_HEADER","pastDate","a","b","areEqual","getFullYear","getMonth","getDate","getMonthData","year","month","result","date","Date","daysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","dayOfWeek","getDay","getDayOfWeek","day","i","j","undefined","getDateFormat","fullDate","checkWithCurrentDate","selectedDate","SelectDate","props","monthData","currentDate","left","className","handlePrevMonthButtonClick","value","onChange","handleSelectMonth","map","name","index","handleSelectYear","handleNextMonthButtonClick","week","classnames","Input","type","disabled","baseUrl","getBase","axios","get","then","response","base","data","newRecord","put","recordDate","recordTimeToDelete","delete","putSession","time","mySession","sendMessage","user_id","random_id","message","SelectTime","busyTime","Object","keys","recordTime","selectedTime","firstName","lastName","phone","amount","handleTime","e","indexOf","target","splice","push","includes","defaultValue","tempBase","vk_ID","note","Math","random","catch","err","console","log","updateBase","AdminPanel","tableHeader","cols","onBlur","event","saveNote","setNote","print","getMySession","checked","deleteRecordFromBase","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","setSelectedDate","setBase","fetchData","useEffect","bridge","send","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchUser","error","currentTarget","dataset","to","tempDay","putBase","confirm","deleteBase","saves","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a8b8cfbe.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\n\nconst Home = ({ id, go, fetchedUser, user}) => {\n\n\tfunction message(){\n\t\t//sendMessage()\n\t}\n\n\n\treturn (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser && <Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"selectDate\">\n\t\t\t\t\tВыберите дату записи\n\t\t\t\t</Button>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={user} data-to=\"adminPanel\">\n\t\t\t\t\tКалендарь занятости\n\t\t\t\t</Button>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={message} data-to=\"home\">\n\t\t\t\t\tСообщение\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n)};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from \"react\";\r\n\r\nconst MONTH_DAY = {years: [ 2021, 2022, 2023, 2024],\r\n    monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n    weekDayNames: ['Пн', 'Вт', 'Ср', 'Чт' , 'Пт', 'Сб', 'Вс']}\r\n\r\nconst DAYS_IN_WEEK = 7;\r\n\r\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nconst WEEK_DAYS_FROM_MONDAY = [6, 0, 1, 2, 3, 4, 5];\r\n\r\nconst Month = {\r\n    January: 0,\r\n    February: 1,\r\n    March: 2,\r\n    April: 3,\r\n    May: 4,\r\n    June: 5,\r\n    July: 6,\r\n    August: 7,\r\n    September: 8,\r\n    October: 9,\r\n    November: 10,\r\n    December: 11\r\n};\r\n\r\nconst RECORD_TIMES = ['10-11', '11-12', '12-13', '13-14', '14-15', '15-16', '16-17', '17-18', '18-19']\r\n\r\nconst TABLE_HEADER = ['Дата','Ф.И.О','Телефон','Колл','Заметка','Вид','Удалить']\r\n\r\nexport function getMonthDay(){\r\n    return MONTH_DAY\r\n}\r\n\r\nexport function getRecordTimes() {\r\n    return RECORD_TIMES\r\n}\r\n\r\nexport function getTableHeader(){\r\n    return TABLE_HEADER\r\n}\r\n\r\nexport  function pastDate(a, b) {\r\n    return !(a > b || areEqual(a, b));\r\n\r\n}\r\n\r\nexport function areEqual(a, b) {\r\n    if (!a || !b) return false;\r\n\r\n    return (\r\n        a.getFullYear() === b.getFullYear() &&\r\n        a.getMonth() === b.getMonth() &&\r\n        a.getDate() === b.getDate()\r\n    );\r\n}\r\n\r\nexport function isLeapYear(year) {\r\n    return !((year % 4) || (!(year % 100) && (year % 400)));\r\n}\r\n\r\nexport function getDaysInMonth(date) {\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const daysInMonth = DAYS_IN_MONTH[month];\r\n\r\n    if (isLeapYear(year) && month === Month.February) {\r\n        return daysInMonth + 1;\r\n    } else {\r\n        return daysInMonth;\r\n    }\r\n}\r\n\r\nexport function getDayOfWeek(date) {\r\n    const dayOfWeek = date.getDay();\r\n\r\n    return WEEK_DAYS_FROM_MONDAY[dayOfWeek];\r\n}\r\n\r\nexport function getMonthData(year, month) {\r\n    const result = [];\r\n    const date = new Date(year, month);\r\n    const daysInMonth = getDaysInMonth(date);\r\n    const monthStartsOn = getDayOfWeek(date);\r\n    let day = 1;\r\n\r\n    for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\r\n        result[i] = [];\r\n\r\n        for (let j = 0; j < DAYS_IN_WEEK; j++) {\r\n            if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\r\n                result[i][j] = undefined;\r\n            } else {\r\n                result[i][j] = new Date(year, month, day++);\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function getDateFormat (fullDate){\r\n    let day = fullDate.getDate();\r\n    let month = fullDate.getMonth();\r\n    let year = fullDate.getFullYear();\r\n    if (day < 10){\r\n        day = \"0\" + day\r\n    }\r\n    if (month < 10){\r\n        month = \"0\" + (month + 1)\r\n    }\r\n    return year + '-' + month + '-' + day;\r\n}\r\n\r\nexport function checkWithCurrentDate(selectedDate) {\r\n    if (selectedDate.getMonth() >= new Date().getMonth() &&\r\n        selectedDate.getFullYear() >= new Date().getFullYear() ||\r\n        selectedDate.getFullYear() > new Date().getFullYear()) {\r\n        return selectedDate\r\n    }\r\n    if (selectedDate.getMonth() === new Date().getMonth() &&\r\n        selectedDate.getFullYear() === new Date().getFullYear() &&\r\n        selectedDate.getDate() < new Date().getDate()) {\r\n        return new Date()\r\n    }\r\n    return new Date()\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from \"classnames\";\r\nimport \"./SelectDate.css\"\r\n\r\nimport {Button, Panel, PanelHeader, PanelHeaderBack} from '@vkontakte/vkui';\r\n\r\nimport {getMonthDay, getMonthData, pastDate, areEqual, getDateFormat} from \"../function/Function\";\r\n\r\n\r\nconst SelectDate = props => {\r\n    const {years, monthNames, weekDayNames} = getMonthDay();\r\n    const monthData=getMonthData(props.selectedDate.getFullYear(),props.selectedDate.getMonth())\r\n    const currentDate = new Date();\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader\r\n                left={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n            >\r\n                Выберите дату\r\n            </PanelHeader>\r\n            <div className=\"Navigation\">\r\n                <header>\r\n                    <button onClick={() => props.handlePrevMonthButtonClick(props.selectedDate)}>{'<'}</button>\r\n                    <select\r\n                        value={props.selectedDate.getMonth()}\r\n                        onChange={props.handleSelectMonth}\r\n                    >\r\n                        {monthNames.map((name, index) =>\r\n                            <option key={name} value={index}>\r\n                                {name}\r\n                            </option>)}\r\n                    </select>\r\n                    <select\r\n                        value={props.selectedDate.getFullYear()}\r\n                        onChange={props.handleSelectYear}\r\n                    >\r\n                        {years.map(year =>\r\n                            <option key={year} value={year}>\r\n                                {year}\r\n                            </option>\r\n                        )}\r\n                    </select>\r\n                    <button onClick={() => props.handleNextMonthButtonClick(props.selectedDate)}>{'>'}</button>\r\n                </header>\r\n            </div>\r\n            <div className=\"SelectDate\">\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        {weekDayNames.map(name =>\r\n                            <th key={name}>{name}</th>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                    {monthData.map((week, index) =>\r\n                        <tr key={index} className=\"week\">\r\n                            {week.map((date, index) => date ?\r\n                                <td\r\n                                    key={index}\r\n                                    className={classnames('day', {\r\n                                        'expired' : pastDate(date, currentDate),\r\n                                        'today': pastDate(date, currentDate),\r\n                                        'selected': areEqual(date, props.selectedDate),\r\n\r\n                                    })}\r\n                                    onClick={!(pastDate(date, currentDate))?() => props.onChange(date):null}\r\n                                >{date.getDate()}</td>\r\n                                :\r\n                                <td key={index} />\r\n                            )}\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <Button className=\"Button\" onClick={props.go} data-to=\"selectedTime\">\r\n                {getDateFormat(props.selectedDate)}\r\n            </Button>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nSelectDate.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SelectDate;","import React from \"react\";\r\n\r\nconst Input = props =>{\r\n\r\n    return(\r\n        <div>\r\n            <input\r\n                type=\"checkbox\"\r\n                id={props.id}\r\n                onChange={props.onChange}\r\n                value={props.value}\r\n                disabled={props.disabled}/>\r\n            <label id={props.id}>\r\n                {props.value}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\nexport default Input","import axios from \"axios\";\r\nconst baseUrl=\"https://zen-studiovl-default-rtdb.europe-west1.firebasedatabase.app\"\r\n\r\nexport function getBase(){\r\n    return axios.get(`${baseUrl}/ZenRecords.json`)\r\n        .then((response) => response)\r\n        .then((base) => {\r\n            return base.data\r\n        })\r\n}\r\n\r\nexport async function postBase(newRecord){\r\n    return  await axios.post(`${baseUrl}/ZenRecords.json`, newRecord)\r\n}\r\n\r\nexport async function putBase(newRecord){\r\n    return await axios.put(`${baseUrl}/ZenRecords/-Mvm_QfeNT4XBwpmFbVA.json`, newRecord)\r\n}\r\n\r\nexport async function deleteBase(recordDate, recordTimeToDelete){\r\n    return  await axios.delete(`${baseUrl}/ZenRecords/-Mvm_QfeNT4XBwpmFbVA/${recordDate}/${recordTimeToDelete}.json`)\r\n}\r\n\r\nexport async function putSession(date, time, mySession){\r\n    return await axios.put(`${baseUrl}/ZenRecords/-Mvm_QfeNT4XBwpmFbVA/${date}/${time}.json`, mySession)\r\n}\r\n\r\nexport async function sendMessage (user_id, random_id, message) {\r\n    return await axios.get(`https://api.vk.com/method/messages.send?user_id=${user_id}&random_id=${random_id}&message=${message}&access_token=85cf29a79eee820080bed713566a0b52dd415d6d889f13d33641b8bca4799769b7f58dd9e9d6b616b2f7f&v=5.131`)\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./SelectTime.css\"\r\n\r\nimport {Panel, PanelHeader, PanelHeaderBack} from \"@vkontakte/vkui\";\r\nimport Input from \"../components/Input\";\r\nimport {getDateFormat, getRecordTimes} from \"../function/Function\";\r\nimport {sendMessage} from \"../function/Server\";\r\n\r\n\r\nconst SelectTime = props => {\r\n    const base = props.base\r\n    const selectedDate = getDateFormat(props.selectedDate);\r\n    const busyTime = Object.keys({...base[getDateFormat(props.selectedDate)]});\r\n    const recordTime = getRecordTimes();\r\n    const selectedTime = [];\r\n\r\n    let firstName = props.fetchedUser.first_name\r\n    let lastName = props.fetchedUser.last_name\r\n    let phone = null\r\n    let amount = null\r\n\r\n    function handleTime(e){\r\n        const index = selectedTime.indexOf(e.target.value)\r\n        if (index >= 0){\r\n            selectedTime.splice(index, 1)\r\n        }else {\r\n            selectedTime.push(e.target.value)\r\n        }\r\n    }\r\n    function handleFirstName(e){firstName = e.target.value}\r\n    function handleLastName(e){lastName = e.target.value}\r\n    function handlePhone(e){phone = e.target.value}\r\n    function handleAmount(e){amount = e.target.value}\r\n\r\n    function saveTimeRecords(){\r\n        const tempBase = {...props.base[selectedDate]}\r\n        const message = 'Вы записались ' + selectedDate + 'на' + selectedTime + 'в студию ZEN'\r\n        selectedTime.map((value) => {\r\n            tempBase[value]= {\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                phone: phone,\r\n                vk_ID: props.fetchedUser.id,\r\n                amount: amount,\r\n                mySession: false,\r\n                note:''\r\n               }\r\n       })\r\n        base[selectedDate] = tempBase\r\n        sendMessage(props.fetchedUser.id, Math.random()*34567, message).catch(err=>{\r\n            console.log(err)\r\n        })\r\n        props.updateBase(base)\r\n\r\n    }\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader\r\n                left={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n            >\r\n                Выберите время\r\n            </PanelHeader>\r\n            <div className=\"SelectTime\">\r\n                <div className=\"time\">{recordTime.map((value, index) => {\r\n                    if (busyTime.includes(value)) {\r\n                        return <Input\r\n                            key={index}\r\n                            id={index}\r\n                            value={value}\r\n                            disabled={true}\r\n                        />\r\n                    }\r\n                    else\r\n                        return <Input\r\n                            key={index}\r\n                            id={index}\r\n                            value={value}\r\n                            onChange={handleTime}\r\n                        />\r\n                })}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <label>Имя</label>\r\n                    <input type=\"text\" onChange={handleFirstName} defaultValue={props.fetchedUser.first_name}/>\r\n                </div>\r\n                <div>\r\n                    <label>Фамилия</label>\r\n                    <input type=\"text\" onChange={handleLastName} defaultValue={props.fetchedUser.last_name}/>\r\n                </div>\r\n                <div>\r\n                    <label>Телефон</label>\r\n                    <input type=\"text\" onChange={handlePhone} defaultValue='+7'/>\r\n                </div>\r\n                <div>\r\n                    <label>Количество людей</label>\r\n                    <input type=\"text\" onChange={handleAmount} defaultValue=''/>\r\n                </div>\r\n            </div>\r\n\r\n            <button onClick={saveTimeRecords}>Записаться</button>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nSelectTime.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SelectTime;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Panel, PanelHeader, PanelHeaderBack} from '@vkontakte/vkui';\r\nimport {getTableHeader} from \"../function/Function\";\r\n\r\nimport \"./AdminPanel.css\"\r\n\r\nconst AdminPanel = props => {\r\n    const tableHeader = getTableHeader();\r\n    const recordDate = Object.keys(props.base)\r\n\r\n    function print(event,date,time){\r\n        const saveNote = {...props.base[date][time], note: event.target.value}\r\n        props.setNote(date, time , saveNote)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader\r\n                left={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n            >\r\n                Записи\r\n            </PanelHeader>\r\n            <div >\r\n                <table id='adminTable'>\r\n                    <thead>\r\n                        <tr>\r\n                            {tableHeader.map(name =>\r\n                                <th key={name}>{name}</th>\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {recordDate.map(date=>Object.keys(props.base[date]).map(time =>\r\n                                <tr id={props.base[date][time].mySession?'checked':'noChecked'} key={time}>\r\n                                    <td>{date}<br/>{time}</td>\r\n                                    <td>{props.base[date][time].firstName}<br/>{props.base[date][time].lastName}</td>\r\n                                    <td>{props.base[date][time].phone}</td>\r\n                                    <td>{props.base[date][time].amount}</td>\r\n                                    <td><textarea cols='15' defaultValue={props.base[date][time].note} onBlur={(event)=>{print(event, date, time)}}/></td>\r\n                                    <td>\r\n                                        <input\r\n                                            name={date + time}\r\n                                            type='checkbox'\r\n                                            onChange={()=>{props.getMySession(date, time, props.base[date][time])}}\r\n                                            checked={props.base[date][time].mySession}\r\n                                        />\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        <button id='deleteButton' onClick={() => props.deleteRecordFromBase(date,time)}>\r\n                                            X\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n        </Panel>\r\n    );\r\n}\r\n\r\nAdminPanel.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AdminPanel;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport SelectDate from \"./panels/SelectDate\";\nimport SelectTime from \"./panels/SelectTime\";\nimport AdminPanel from \"./panels/AdminPanel\";\nimport {checkWithCurrentDate} from \"./function/Function\";\nimport {deleteBase, getBase, putBase, putSession, sendMessage} from \"./function/Server\";\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [selectedDate,setSelectedDate] = useState(new  Date());\n\tconst [base, setBase] = useState(null)\n\n\tasync function fetchData() {\n\t\tconst data = await getBase()\n\t\tconst id = Object.keys(data)\n\t\tsetBase(data[id])\n\t}\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchUser() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchUser().catch(error => console.log(error.message));\n\n\t\tfetchData().catch(error => console.log(error.message));\n\t}, []);\n\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tfunction user(){\n\t\tfetchData().catch(error => console.log(error.message));\n\t\tsetActivePanel(\"adminPanel\");\n\t}\n\n\tfunction setMySession(date, time, saves) {\n\t\tlet mySession = {...saves, mySession: !base[date][time].mySession}\n\t\tputSession(date, time, mySession).then(()=>{\n\t\t\tfetchData().catch(error => console.log(error.message));\n\t\t\tsetActivePanel(\"adminPanel\");\n\t\t}).catch(err => {console.log(err)})\n\t}\n\n\tfunction setNote(date, time, saveNote) {\n\t\tputSession(date, time, saveNote).then(()=>{\n\t\t\tfetchData().catch(error => console.log(error.message));\n\t\t\tsetActivePanel(\"adminPanel\");\n\t\t}).catch(err => {console.log(err)})\n\t}\n\n\n\tfunction updateBase(e) {\n\t\tsetActivePanel(\"home\")\n\t\tputBase(e).catch(error => console.log(error.message));\n\t}\n\t\n\tfunction deleteRecordFromBase(recordDate, recordTimeToDelete) {\n\t\tif (confirm(\"Вы уверенны?\")){\n\t\t\tconst message = 'Ваша запись на ' + recordDate + ' в ' + recordTimeToDelete + ' анулированна'\n\t\t\tsendMessage(base[recordDate][recordTimeToDelete].vk_ID, Math.random()*34567, message).catch(err => {\n\t\t\t\tconsole.log(err)})\n\t\t\tdeleteBase(recordDate, recordTimeToDelete).then(()=>{\n\t\t\t\tfetchData().catch(error => console.log(error.message));\n\t\t\t\tsetActivePanel(\"adminPanel\")\n\t\t\t}).catch(err=>console.log(err))\n\t\t}\n\t}\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home\n\t\t\t\t\t\tfetchedUser={fetchedUser}\n\t\t\t\t\t\tid='home'\n\t\t\t\t\t\tgo={go}\n\t\t\t\t\t\tuser={user}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectDate\n\t\t\t\t\t\tselectedDate = {selectedDate}\n\t\t\t\t\t\tid='selectDate'\n\t\t\t\t\t\tgo={go}\n\t\t\t\t\t\thandlePrevMonthButtonClick={handlePrevMonthButtonClick}\n\t\t\t\t\t\thandleNextMonthButtonClick={handleNextMonthButtonClick}\n\t\t\t\t\t\thandleSelectMonth={handleSelectMonth}\n\t\t\t\t\t\thandleSelectYear={handleSelectYear}\n\t\t\t\t\t\tonChange={handleSelectDay}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectTime\n\t\t\t\t\t\tid='selectedTime'\n\t\t\t\t\t\tgo={go}\n\t\t\t\t\t\tbase={base}\n\t\t\t\t\t\tselectedDate={selectedDate}\n\t\t\t\t\t\tfetchedUser={fetchedUser}\n\t\t\t\t\t\tupdateBase={updateBase}\n\t\t\t\t\t/>\n\t\t\t\t\t<AdminPanel\n\t\t\t\t\t\tid='adminPanel'\n\t\t\t\t\t\tgo={go}\n\t\t\t\t\t\tbase={base}\n\t\t\t\t\t\tdeleteRecordFromBase={deleteRecordFromBase}\n\t\t\t\t\t\tgetMySession={setMySession}\n\t\t\t\t\t\tsetNote={setNote}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n\n\tfunction handlePrevMonthButtonClick (e) {\n\t\tsetSelectedDate(checkWithCurrentDate(new Date(e.getFullYear(), e.getMonth() - 1, e.getDate())))\n\t}\n\tfunction handleNextMonthButtonClick (e) {\n\t\tsetSelectedDate(new Date(e.getFullYear(), e.getMonth() + 1, e.getDate()))\n\t}\n\tfunction handleSelectMonth (e) {\n\t\tsetSelectedDate(checkWithCurrentDate(new Date(selectedDate.getFullYear(), e.target.value, selectedDate.getDate())))\n\t}\n\tfunction handleSelectYear (e) {\n\t\tsetSelectedDate(checkWithCurrentDate(new Date(e.target.value, selectedDate.getMonth(), selectedDate.getDate())))\n\n\t}\n\tfunction handleSelectDay (e) {\n\t\tconst tempDay = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), e.getDate())\n\t\tsetSelectedDate(tempDay)\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n//f61e404a68946ab57c8df8f2c209b0951fdcfa5162878252efdb68483c10d4ae126cbd37c7afeb0d4d15d Токен\n//ba3b76ecba3b76ecba3b76ec36ba4112a0bba3bba3b76ecdb94c5b0481a45b0e6da2805 сервисный ключ\n//90863ba4161c1aba87333ede97616f49c848c9033008eda0abb76d30a3ca89e60c367ddcbdfd8b4eb5c6c ключ сообщества\n//1b1b24a37d815b5c6db2d8bcea197a9bda252327d751cee1eca8b59e762909b95061f923f25337e88e442\n//209480369=85cf29a79eee820080bed713566a0b52dd415d6d889f13d33641b8bca4799769b7f58dd9e9d6b616b2f7f токен сообщества\n//85cf29a79eee820080bed713566a0b52dd415d6d889f13d33641b8bca4799769b7f58dd9e9d6b616b2f7f"],"sourceRoot":""}